FactorGraph graph(dim);

    // define initial pose of variables
    vector<vector<double>> initials = {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}, {0.1, 0, 0}};

    /* 1D Test */
    // add variables
    for(int i=0; i<initials.size(); i++){
        graph.addVariable(i, initials[i], odom_cov);
    }
       
    // prior factor for x_0 (f_0)
    vector<double> f_0_zs_mean = {0.0, 0.0, 0.0};
    vector<Gaussian> f_0_zs = {Gaussian(dim, 1.0, f_0_zs_mean, prior_cov)};
    graph.addFactor(0, f_0_zs, "prior", 0, 0);

    // between factor between x_0 and x_1 (f_1)
    vector<double> f_1_zs_mean = {1.0, 0.0, 0.0};
    vector<Gaussian> f_1_zs = {Gaussian(dim, 1.0, f_1_zs_mean, odom_cov)};
    graph.addFactor(1, f_1_zs, "between", 0, 1);

    // between factor between x_1 and x_2 (f_2)
    vector<double> f_2_zs_mean = {1.0, 0.0, 0.0};
    vector<Gaussian> f_2_zs = {Gaussian(dim, 1.0, f_2_zs_mean, odom_cov)};
    graph.addFactor(2, f_2_zs, "between", 1, 2);

    // between factor between x_2 and x_3 (f_3)
    vector<double> f_3_zs_mean = {-1.5, 0.0, 0.0};
    vector<double> f_3_zs_mean_2 = {-2.5, 0.0, 0.0};
    vector<Gaussian> f_3_zs = {Gaussian(dim, 1.0, f_3_zs_mean, odom_cov), Gaussian(dim, 1.0, f_3_zs_mean_2, odom_cov)};
    graph.addFactor(3, f_3_zs, "between", 2, 3);

    // loop closure factor between x_0 and x_3 (f_4)
    vector<double> f_4_zs_mean = {0, 0.0, 0.0};
    vector<Gaussian> f_4_zs = {Gaussian(dim, 1.0, f_4_zs_mean, meas_cov)};
    graph.addFactor(4, f_4_zs, "loop", 0, 3);
   
    graph.getUpdateOrdetJT();

    // for(int i=0; i<graph.jt_order.size(); i++){
    //     print_std_vector(graph.jt_order[i]);
    // }


    graph.showVarPoseAll();

    graph.propagateMsgAll(true);
    graph.updatePoseAll();

    cout<<"###################################################"<<endl;


    graph.showVarPoseAll();